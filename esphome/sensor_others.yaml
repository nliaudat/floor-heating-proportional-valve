
sensor:
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s
    
  # - platform: uptime
    # name: "${friendly_name} Uptime"    
    # id: ${name}_uptime_sensor
    # update_interval: 60s
    # internal: true
    # on_raw_value:
      # then:
        # - text_sensor.template.publish:
            # id: ${name}_uptime_human
            # state: !lambda |-
              # int seconds = round(id(${name}_uptime_sensor).raw_state);
              # int days = seconds / (24 * 3600);
              # seconds = seconds % (24 * 3600);
              # int hours = seconds / 3600;
              # seconds = seconds % 3600;
              # int minutes = seconds /  60;
              # seconds = seconds % 60;
              # return (
                # (days ? String(days) + "d " : "") +
                # (hours ? String(hours) + "h " : "") +
                # (minutes ? String(minutes) + "m " : "") +
                # (String(seconds) + "s")
              # ).c_str();      

# text_sensor:  
  # - platform: template
    # name: "${friendly_name} uptime"
    # id: ${name}_uptime_human
    # icon: mdi:clock-start  